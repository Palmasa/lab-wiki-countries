[{"/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/Countries/Country.jsx":"1","/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/Map/Map.jsx":"2","/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/App.js":"3","/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/services/baseService.js":"4","/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/Sidebar/CountryList.jsx":"5","/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/Router/Router.jsx":"6","/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/NotFound/NotFound.jsx":"7"},{"size":2045,"mtime":1617374527835,"results":"8","hashOfConfig":"9"},{"size":842,"mtime":1617371440908,"results":"10","hashOfConfig":"9"},{"size":505,"mtime":1617359969655,"results":"11","hashOfConfig":"9"},{"size":412,"mtime":1617374775712,"results":"12","hashOfConfig":"9"},{"size":2229,"mtime":1617377299850,"results":"13","hashOfConfig":"9"},{"size":388,"mtime":1617374174165,"results":"14","hashOfConfig":"9"},{"size":162,"mtime":1617290683695,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"459ba",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/Countries/Country.jsx",["32"],"import React, { Component } from 'react'\nimport { getOneCountry, getOneBorder } from '../../services/baseService'\nimport { Link } from 'react-router-dom'\nimport Map from '../Map/Map'\n\nclass Country extends Component {\n\n    state = {\n        country: [],\n        loader: true\n    }\n    \n    componentDidMount() {\n        this.getCountry()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.match.params.name !== this.props.match.params.name) {\n          this.setState({ loader: true })\n        }\n\n        if (this.state.loader) {\n            this.getCountry()\n          }\n    }\n\n    getCountry = () => {\n        const name = this.props.match.params.name\n            getOneCountry(name)\n            .then(response => {\n                this.setState({ country: response, loader: false })\n            })\n    }\n\n    render() {\n        const country = this.state.country\n        return (\n            <div className=\"Country\">\n                <div id=\"map\"></div>\n                {\n                    this.state.loader \n                    ? (<p>Loading...</p>)\n                    : (\n                        <>\n                            <h2>{country.name}</h2>\n                            <img src={country.flag} alt={`Flag of ${country.name}`} style={{width: 180}}/>\n                            <p>Native name: {country.nativeName}</p>\n                            <p>Capital: {country.capital}</p>\n                            <p>☎️ {country.callingCodes.map((num) => <span key={num}>{num}</span>)}</p>\n                            <p>{country.area}</p>\n                            {country.borders.map((bor) => (\n                                <div key={bor}>\n                                    <Link to={`/detail/${bor}/country`} >{bor}</Link>\n                                </div>\n                            ))}\n                            <Map lon={country.latlng[0]} lat={country.latlng[1]}/>\n                        </>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default Country","/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/Map/Map.jsx",[],["33","34"],"/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/App.js",[],"/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/services/baseService.js",[],"/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/Sidebar/CountryList.jsx",[],"/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/Router/Router.jsx",[],"/Users/inesdepalma/Documents/IronHack/3-module/labs/lab-wiki-countries/src/components/NotFound/NotFound.jsx",[],{"ruleId":"35","severity":1,"message":"36","line":2,"column":25,"nodeType":"37","messageId":"38","endLine":2,"endColumn":37},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},"no-unused-vars","'getOneBorder' is defined but never used.","Identifier","unusedVar","no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-global-assign","no-unsafe-negation"]